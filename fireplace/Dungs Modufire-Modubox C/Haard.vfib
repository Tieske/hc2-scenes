{"name":"Haard","type":"virtual_device","properties":{"deviceIcon":866,"currentIcon":"866","log":"","logTemp":"","mainLoop":"-- mainloop does nothing but checking/correcting the icon\n\nlocal icon_off_id = 865\nlocal icon_on_id = 866\nlocal device_up_id = 905\nlocal device_down_id = 904\nlocal device_reset_id = 902\nlocal device_state_id = 903\nlocal self_id = fibaro:getSelfId()\n\nlocal current_state = tonumber(fibaro:getValue(device_state_id, \"value\"))\nif current_state == 0 then\n  fibaro:call(self_id, \"setProperty\", \"currentIcon\", icon_off_id)\nelse\n  fibaro:call(self_id, \"setProperty\", \"currentIcon\", icon_on_id)\nend  \n","visible":"true","rows":[{"type":"button","elements":[{"id":1,"lua":true,"waitForResponse":false,"caption":"On","name":"button_0_0","empty":false,"msg":"local icon_off_id = 865\nlocal icon_on_id = 866\nlocal device_up_id = 905\nlocal device_down_id = 904\nlocal device_reset_id = 902\nlocal device_state_id = 903\nlocal self_id = fibaro:getSelfId()\n\n-- check state of actors\nlocal state  = tonumber(fibaro:getValue(device_state_id, \"value\"))\nlocal state1 = tonumber(fibaro:getValue(device_up_id, \"value\"))\nlocal state2 = tonumber(fibaro:getValue(device_down_id, \"value\"))\nlocal state3 = tonumber(fibaro:getValue(device_reset_id, \"value\"))\n\n-- we only execute a command when nothing is in progress, which means\n-- that all switches must be OFF, and current state is OFF\nif state1+state2+state3 == 0 and state == 0 then\n  -- must enable up & down to switch state of the fireplace\n  fibaro:call(device_up_id, \"turnOn\")\n  fibaro:call(device_down_id, \"turnOn\")\n  -- NOTE: the device are configured to AUTO_OFF in 5 seconds!!!\nend\n","buttonIcon":865,"favourite":false,"main":false},{"id":2,"lua":true,"waitForResponse":false,"caption":"Toggle","name":"button_0_1","empty":false,"msg":"local icon_off_id = 865\nlocal icon_on_id = 866\nlocal device_up_id = 905\nlocal device_down_id = 904\nlocal device_reset_id = 902\nlocal device_state_id = 903\nlocal self_id = fibaro:getSelfId()\n\n-- check state of actors\nlocal state  = tonumber(fibaro:getValue(device_state_id, \"value\"))\nlocal state1 = tonumber(fibaro:getValue(device_up_id, \"value\"))\nlocal state2 = tonumber(fibaro:getValue(device_down_id, \"value\"))\nlocal state3 = tonumber(fibaro:getValue(device_reset_id, \"value\"))\n\n-- we only execute a command when nothing is in progress, which means\n-- that all switches must be OFF\nif state1+state2+state3 == 0 then\n  -- must enable up & down to switch state of the fireplace\n  -- we do not care about current state, as we toggle\n  fibaro:call(device_up_id, \"turnOn\")\n  fibaro:call(device_down_id, \"turnOn\")\n  -- NOTE: the device are configured to AUTO_OFF in 5 seconds!!!\nend\n","buttonIcon":866,"favourite":false,"main":true},{"id":3,"lua":true,"waitForResponse":false,"caption":"Off","name":"button_0_2","empty":false,"msg":"local icon_off_id = 865\nlocal icon_on_id = 866\nlocal device_up_id = 905\nlocal device_down_id = 904\nlocal device_reset_id = 902\nlocal device_state_id = 903\nlocal self_id = fibaro:getSelfId()\n\n-- check state of actors\nlocal state  = tonumber(fibaro:getValue(device_state_id, \"value\"))\nlocal state1 = tonumber(fibaro:getValue(device_up_id, \"value\"))\nlocal state2 = tonumber(fibaro:getValue(device_down_id, \"value\"))\nlocal state3 = tonumber(fibaro:getValue(device_reset_id, \"value\"))\n\n-- we only execute a command when nothing is in progress, which means\n-- that all switches must be OFF, and current state is ON\nif state1+state2+state3 == 0 and state ~= 0 then\n  -- must enable up & down to switch state of the fireplace\n  fibaro:call(device_up_id, \"turnOn\")\n  fibaro:call(device_down_id, \"turnOn\")\n  -- NOTE: the device are configured to AUTO_OFF in 5 seconds!!!\nend\n","buttonIcon":866,"favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}